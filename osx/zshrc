# Amazon Q pre block. Keep at the top of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.pre.zsh"
# load plugins
source $HOME/.antigen.conf.zsh

# completion for brew packages
if type brew &>/dev/null; then
  FPATH="$HOMEBREW_PREFIX/share/zsh/site-functions:$FPATH"
  FPATH="$HOMEBREW_PREFIX/share/zsh-completions:$FPATH"
fi
brew completions link &>/dev/null

# completion
# load manually added completion
if [[ ! -d "$HOME/.local/share/zsh/site-functions" ]]; then
  mkdir -p $HOME/.local/share/zsh/site-functions
fi
export fpath=( $HOME/.local/share/zsh/site-functions "${fpath[@]}" )

autoload -Uz compinit
compinit -i

HB_CNF_HANDLER="$HOMEBREW_REPOSITORY/Library/Taps/homebrew/homebrew-command-not-found/handler.sh"
if [ -f "$HB_CNF_HANDLER" ]; then
  source "$HB_CNF_HANDLER";
fi

# SSH Agent
ssh-add --apple-load-keychain

# Prompt
autoload -Uz promptinit
promptinit
zstyle ':completion:*' menu select
setopt COMPLETE_ALIASES

autoload -Uz up-line-or-beginning-search down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

[[ -n "${key[Up]}"   ]] && bindkey -- "${key[Up]}"   up-line-or-beginning-search
[[ -n "${key[Down]}" ]] && bindkey -- "${key[Down]}" down-line-or-beginning-search

if type starship &>/dev/null; then
  eval "$(starship init zsh)"
else
  prompt walters
fi

# load zoxide if exists
if type zoxide &>/dev/null; then
  eval "$(zoxide init zsh)"
fi

# handy aliases
p() {
  if (type ghq&>/dev/null) && (type peco&>/dev/null); then
    if [ $# -eq 0 ]; then
      cd $(ghq root)/$(ghq list | peco)
    else
      cd $(ghq root)/$(ghq list | peco --query $@)  
    fi
  fi
}

xcode() {
  XCODE_PATH="/Applications/Xcode.app"
  if [[ $(uname) == "Darwin" ]]; then
    if [ $# -eq 0 ]; then
      open $XCODE_PATH
    else
      open $1 -a $XCODE_PATH
    fi
  fi
}

# if file exists, source it
if [ -f ~/.zshrc.local ]; then
  source ~/.zshrc.local
fi

# if AWS_PROFILE_SWITCHER is not set, set it to default
if [ -z "$AWS_PROFILE_SWITCHER" ]; then
  export AWS_PROFILE_SWITCHER="$HOME/Developer/github.com/johnnyopao/awsp"
fi

aws() {
  if (type aws &> /dev/null) && ([ -f ~/.aws/credentials ] || [ -f ~/.aws/config ]) && ([ -f $AWS_PROFILE_SWITCHER/run.sh ]); then
  source $AWS_PROFILE_SWITCHER/run.sh
  command aws $@
else
  command aws $@
fi
}

if type eza &>/dev/null; then
  alias ls='eza'
fi

if type bat &>/dev/null; then
  alias cat='bat -pp'
fi

if type hexyl &>/dev/null; then
  alias od='hexyl'
fi

if type fd &>/dev/null; then
  alias find='fd'
fi

if type procs &>/dev/null; then
  alias ps='procs'
fi

if type rg &>/dev/null; then
  alias grep='rg'
fi

if type btm &>/dev/null; then
  alias top='btm -bTg'
fi

# pnpm
export PNPM_HOME="$HOME/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# mise
if where mise &>/dev/null; then
  eval "$(mise activate zsh)"
fi
# mise end

# https://github.com/orbstack/orbstack/blob/main/orb.plugin.zsh
if (( $+commands[orbctl] )); then
  eval "$(orbctl completion zsh)"
  compdef _orb orbctl
  compdef _orb orb
fi

# Greetings!
if where macchina &>/dev/null; then
  macchina
fi

# Amazon Q post block. Keep at the bottom of this file.
[[ -f "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh" ]] && builtin source "${HOME}/Library/Application Support/amazon-q/shell/zshrc.post.zsh"
